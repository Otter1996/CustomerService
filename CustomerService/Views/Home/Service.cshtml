
@{
    ViewBag.Title = "Service";
}
<header>
    <style>
        .mytext {
            border: 0;
            padding: 10px;
            background: whitesmoke;
        }

        .text {
            width: 75%;
            display: flex;
            flex-direction: column;
        }

            .text > p:first-of-type {
                width: 100%;
                margin-top: 0;
                margin-bottom: auto;
                line-height: 13px;
                font-size: 12px;
            }

            .text > p:last-of-type {
                width: 100%;
                text-align: right;
                color: silver;
                margin-bottom: -7px;
                margin-top: auto;
            }

        .text-l {
            float: left;
            padding-right: 10px;
        }

        .text-r {
            float: right;
            padding-left: 10px;
        }

        .avatar {
            display: flex;
            justify-content: center;
            align-items: center;
            width: 25%;
            float: left;
            padding-right: 10px;
        }

        .macro {
            margin-top: 5px;
            width: 85%;
            border-radius: 5px;
            padding: 5px;
            display: flex;
        }

        .msj-rta {
            float: right;
            background: whitesmoke;
        }

        .msj {
            float: left;
            background: white;
        }

        .frame {
            background: #e0e0de;
            height: 450px;
            overflow: hidden;
            padding: 0;
        }

            .frame > div:last-of-type {
                position: absolute;
                bottom: 0;
                width: 100%;
                display: flex;
            }

        body > div > div > div:nth-child(2) > span {
            background: whitesmoke;
            padding: 10px;
            font-size: 21px;
            border-radius: 50%;
        }

        body > div > div > div.msj-rta.macro {
            margin: auto;
            margin-left: 1%;
        }

        #chatwindow {
            width: 100%;
            list-style-type: none;
            padding: 18px;
            position: absolute;
            bottom: 47px;
            display: flex;
            flex-direction: column;
            top: 0;
            overflow-y: scroll;
        }

        .msj:before {
            width: 0;
            height: 0;
            content: "";
            top: -5px;
            left: -14px;
            position: relative;
            border-style: solid;
            border-width: 0 13px 13px 0;
            border-color: transparent #ffffff transparent transparent;
        }

        .msj-rta:after {
            width: 0;
            height: 0;
            content: "";
            top: -5px;
            left: 14px;
            position: relative;
            border-style: solid;
            border-width: 13px 13px 0 0;
            border-color: whitesmoke transparent transparent transparent;
        }

        input:focus {
            outline: none;
        }

        ::-webkit-input-placeholder { /* Chrome/Opera/Safari */
            color: #d4d4d4;
        }

        ::-moz-placeholder { /* Firefox 19+ */
            color: #d4d4d4;
        }

        :-ms-input-placeholder { /* IE 10+ */
            color: #d4d4d4;
        }
    </style>
    <script>
        //送出訊息
        function SendMessage(text) {
            let mytext = text;
            if (mytext != '') {
                insertChat("you", mytext);
                document.getElementById("mytext").value = '';
                postmessagetocontroller(mytext);
            } else {
                alert('哭阿');
            }
        }

        ///頭像設定
        var me = {};
        me.avatar = "/Img/animation.jpg";

        var you = {};
        you.avatar = "/Img/CustomerService.png";

        ///設定時間
        function formatAMPM(date) {
            var hours = date.getHours();
            var minutes = date.getMinutes();
            var ampm = hours >= 12 ? 'PM' : 'AM';
            hours = hours % 12;
            hours = hours ? hours : 12; // the hour '0' should be '12'
            minutes = minutes < 10 ? '0' + minutes : minutes;
            var strTime = hours + ':' + minutes + ' ' + ampm;
            return strTime;
        }

        //於聊天室窗中插入傳送訊息
        function insertChat(who, text) {

            var control = "";
            var date = formatAMPM(new Date()); //自動時間(非發送訊息時間)
            var newStr = getNewline(text);

            if (who == "me") {
                control = '<li style="width:100%";>' +
                    '<div class="msj macro">' +
                    '<div class="avatar"><img class="img-circle" style="width:100%;" src="' + me.avatar + '" /></div>' +
                    '<div class="text text-l">' +
                    '<p>' + newStr + '</p>' +
                    '<p><small>' + date + '</small></p>' +
                    '</div>' +
                    '</div>' +
                    '</li>';
            } else {
                control = '<li style="width:100%;">' +
                    '<div class="msj-rta macro">' +
                    '<div class="text text-r">' +
                    '<p>' + newStr + '</p>' +
                    '<p><small>' + date + '</small></p>' +
                    '</div>' +
                    '<div class="avatar" style="padding:0px 0px 0px 10px !important"><img class="img-circle" style="width:100%;" src="' + you.avatar + '" /></div>' +
                    '</li>';
            }

            $('#chatwindow').append(control).scrollTop($('#chatwindow').prop('scrollHeight')); //串接文字高度
        }
        //換行方法，parameter : 傳送文字
        function getNewline(val) {
            var str = new String(val);
            var bytesCount = 0;
            var s = "";
            for (var i = 0, n = str.length; i < n; i++) {
                var c = str.charCodeAt(i);
                //統計字串的長度
                if ((c >= 0x0001 && c <= 0x007e) || (0xff60 <= c && c <= 0xff9f)) {
                    bytesCount += 1;
                } else {
                    bytesCount += 2;
                }
                //換行
                s += str.charAt(i);
                if (bytesCount >= 21) {
                    s = s + '<br>';
                    //重置
                    bytesCount = 0;
                }
            }
            return s;
        }
    </script>
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-3.4.1.js"></script>
    <script src="~/Scripts/bootstrap.min.js"></script>
</header>
<body>
    <div class="jumbotron">
        <h1>ASP.NET</h1>
        <p class="lead">此專案為測試專案，用來研究聊天室的製作。</p>
        <p>前端參考資源:<a>https://bootsnipp.com/snippets/y8e4W</a> by pablocorezzola</p>
        <h2>@ViewBag.Message</h2>
        <div class="btn btn-warning" onclick="location.href='@Url.Action("login","Home", new { id = 10})'">登入管理員</div>
    </div>
    <div class="row">
        <div class="col-sm-8 col-sm-offset-2 col-md-8 col-md-offset-2 col-lg-8 col-lg-offset-2">
            <div class="col-sm-4 col-md-4 col-lg-4">
                <ul class="list-group" id="list-group"></ul>
            </div>
            <div class="col-sm-8 col-md-8 col-lg-8 frame">
                <ul id="chatwindow"></ul>
                <div>
                    <div class="msj-rta macro">
                        <div class="text text-r" style="background:whitesmoke !important">
                            <input class="mytext" id="mytext" placeholder="Type a message" />
                        </div>
                    </div>
                    <!--傳送按鈕-->
                    <div style="padding:20px;">
                        <button type="button" id="send" class="btn btn-warning" onclick="SendMessage(document.getElementById('mytext').value)">傳送</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    //取得某用戶的對話紀錄
    var RefreshUreadToRead = "@Url.Action("UnreadToRead","Home")";
    var RefreshUnreadMessage = "@Url.Action("ShowConversation", "Home")";
    var UserId = "";
    function readUnreadMessage(username) {
        UserId = username; //儲存點選的用戶名稱給btn用
        document.getElementById('chatwindow').innerHTML = "";
        $.ajax({
            type: "POST", //傳送方式
            url: RefreshUnreadMessage, //傳送目的地
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'alreadyread': username}),
            success: function (data) {
                list = JSON.parse(data);//這個很重要!
                list.forEach(function (value, index, array) {
                    if (array[index].RequestId == username && array[index].ResponseId == "管理員") {
                        insertChat("me", array[index].Context);
                    } else if (array[index].RequestId == "管理員" && array[index].ResponseId == username) {
                        insertChat("you", array[index].Context);
                    }
                })
                $('#' + username + ' span').html('0');
                ChangeUnReadToRead(username,"管理員");
            },
            error: function (xhr) {
                console.log("Oops");
            }
        })
    }

    function ChangeUnReadToRead(RequestId,ResponseId)
    {
        $.ajax({
            type: "POST", //傳送方式
            url: RefreshUreadToRead, //傳送目的地
            dataType: "json",
            contentType: "application/json; charset=utf-8",
            data: JSON.stringify({ 'Who': RequestId, 'ToWho': ResponseId }),
            error: function (xhr) {
                console.log("Oops");
            }
        })
    }
</script>
<script>
     ///送出訊息
    var SendMessageUrl = "@Url.Action("SendMessage","Home")"
    function postmessagetocontroller(message) {
        $(document).ready(function () {
            $.ajax({
                url: SendMessageUrl,
                type: "POST",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: JSON.stringify({ 'Message': message, 'ResponseId': UserId }),
                error: function (xhr) {
                    console.log("hey!有些東西出錯了，沒有收到controller來的訊息");
                },
                success: function (response) {
                    let boolean = JSON.parse(response)
                    if (!response) {
                        alert('請先登入使用者再使用聊天功能');
                    }
                }
            });
        });
    }
</script>
<script>
    //更新未讀清單，每5秒request一次
    var connectcontroller = "@Url.Action("ReadMessage", "Home")";
    var list = "";
    setInterval(
        function () {
            $.ajax({
                type: "POST",
                url: connectcontroller,
                success: function (result) {
                    list = JSON.parse(result);//這個很重要!
                    list.forEach(function (value, index, array) {
                        if (document.getElementById(array[index].name)) {
                            $('#' + array[index].name + ' span').html(array[index].count);
                        }
                        else if (array[index].name != "管理員") {
                            
                            $('#list-group').append(
                                '<li class="list-group-item d-flex justify-content-between align-items-center btn" id="' + array[index].name + '"onclick="readUnreadMessage(\'' + array[index].name + '\')">'
                                + array[index].name +
                                '<span class="badge badge-primary badge-pill">' + array[index].count + '</span></li>')
                        }
                    })
                },
                error: function (xhr) {
                    console.log("hey!有些東西出錯了，沒有收到controller來的訊息");
                },
            });
        }, 5000);
</script>

